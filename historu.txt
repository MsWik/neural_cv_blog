    1  sudo apt-get upgrade
    2  df -h
    3  gparted   #утилита для разбивки диска
    4  sudo apt-get install gparted
		 #установка хрома
    6  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    7  echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
    8  sudo apt-get install google-chrome-stable
    9  sudo apt-get update
   10  google-chrome
   11  chmod +x qt-opensource-linux-x64-5.9.5.run 
   12  ./qt-opensource-linux-x64-5.9.5.run 
                 #пробрасывание ключей
   13  ssh-keygen
   14  cat ~/.ssh/id_rsa.pub | ssh peleng@10.42.0.1 'cat >> ~/.ssh/authorized_keys'
   15  cat ~/.ssh/id_rsa.pub | ssh andry@10.42.0.1 'cat >> ~/.ssh/authorized_keys'
   16  cat ~/.ssh/id_rsa.pub | ssh peleng@10.42.0.197 'cat >> ~/.ssh/authorized_keys'
   		 #установка code (wisual studio code) 	
   17  sudo apt-get install wget gpg
   18  wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
   19  sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
   20  sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
   21  rm -f packages.microsoft.gpg
   22  sudo apt install apt-transport-https
   23  sudo apt update
   24  sudo apt install code
   25  code

   26  qtcreator 
   27  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
   28  sudo apt install ./google-chrome-stable_current_amd64.deb
   29  sudo apt-get install build-essential 
   30  sudo apt-get install libGL-dev
   31  sudo apt-get install qtcreator
   32  sudo apt-get install telegram-desktop 
   33  telegram-desktop 
	#openssh-server установка сервера для доступа
   34  sudo apt-get install openssh-server 
   35  sudo systemctl openssh status
   36  sudo systemctl  status openssh
   37  sudo systemctl  status openssh-server
   38  mc
   39  exit
   40  qtcreator 
   41  ./setup.sh --help
   42  ./setup.sh -p 1 -d ~/nvidia_sdk
   43  sudo apt-get install libglu1-mesa-dev libgles2-mesa-dev
   44  qtcreator 
   45  ssh peleng@10.42.0.197
   46  df -h
   47  history

###########################################################
запуск скрипта
1) device jetson TX 2
	ip - ip jetson 
	user - user jetsn 
        password - password jetson
        ping 
  
	rootfs - папка в которуб бует сохранена rootfs -  далее нажимаем synk ждем минут 30

2) Qt&Linaro 
	gcc-linaro
        qt-src
	далее device -> configure -> make -> make install

запуск qtcreator
1) установить qtcreator 4.14.2
2) Добавить устройство tools -> device -> host/username/password
3) В kits добавить устройство (jetson) -> Добавить девайс -> sysroot (rootfs) -> добавить компилятор
/home/peleng/nvidia_sdk/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc
/home/peleng/nvidia_sdk/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-g++
указать ABI (arm-linux-generetic) -> добавить qtversion /home/peleng/nvidia_sdk/JetsonTX2/qt5host/bin/qmake
4) В настройках епроекта 



